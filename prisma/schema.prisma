generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String     @id @default(cuid())
    name          String?
    email         String     @unique
    bio           String?
    emailVerified DateTime?
    image         String?
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    accounts      Account[]
    FirstOfficer  Sector[]    @relation("Sector_FO")
    PilotFlying   Sector[]    @relation("Sector_PIC")
    sessions      Session[]
    UserRoles     UserRoles?
}

model Account {
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
    user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
}

model Session {
    sessionToken String   @unique
    userId       String
    expires      DateTime
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String
    expires    DateTime

    @@id([identifier, token])
}

model UserRoles {
    userId String @unique
    role   Role
    User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Sector {
    id            Int   @id
    fromIcao      String   @map("from_icao")
    fromName      String   @map("from_name")
    toIcao        String   @map("to_icao")
    toName        String   @map("to_name")
    route         String
    picId         String   @map("pic_id")
    foId          String   @map("fo_id")
    departureTime DateTime @map("departure_time")
    arrivalTime   DateTime @map("arrival_time")
    blockTime     String   @map("block_time")
    FO            User     @relation("Sector_FO", fields: [foId], references: [id])
    PIC           User     @relation("Sector_PIC", fields: [picId], references: [id])

    @@unique([fromIcao, toIcao], name: "tripId")
}

// data from https://www.partow.net/miscellaneous/airportdatabase/index.html#Downloads
model Airport {
    id        Int     @id @default(autoincrement())
    icaoCode  String? @unique @map("icao_code") @db.Char(4)
    iataCode  String? @unique @map("iata_code") @db.Char(3)
    name      String? @db.VarChar(50)
    city      String? @db.VarChar(50)
    country   String? @db.VarChar(50)
    altitude  Int?
    latitude  Float?  @map("lat_deciman")
    longitude Float?  @map("lon_decimal")
}

enum Role {
    member
    crew
    admin
}
